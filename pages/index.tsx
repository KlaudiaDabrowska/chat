import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { ReactNode, useEffect, useRef, useState } from "react";
import styles from "../styles/Home.module.css";
import { io, Socket } from "socket.io-client";
import { IN_MESSAGE, OUT_MESSAGE } from "../consts";

const Home: NextPage = () => {
  const [message, setMessage] = useState<string>("");
  const [messageList, setMessageList] = useState<string[]>(["hi", "hi", "hi"]);
  const [socket, setSocket] = useState<Socket | null>(null);

  //usuwa i dodaje komponent
  //kiedy useffect sie skonczy, usunac wydarzenie
  

  useEffect(() => { 
    const newSocket = io(`http://${window.location.hostname}:3000`);
    setSocket(newSocket);
    () => newSocket?.close();
  }, []);

  socket?.on("connected", (arg) => {
    addMessageToList(arg);
  });

  const handleSending = () => {
    if (message != null) {
      addMessageToList(message);
      socket?.emit("message",  message);
    }
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setMessage(e.target.value);
  };

  const addMessageToList = (message: string) => {
    const arrayCopy = [...messageList];
    arrayCopy.push(message);
    setMessageList(arrayCopy);
  };

  const handleSubmit = (e: any) => {
    addMessageToList(message);
    setMessage("");
    e.preventDefault();
    handleSending();
  };

  const mapArray = (): ReactNode => {
    return messageList.map((message, index) => {
      return (
        <div className={styles.message} key={message + `${index}`}>
          {message}
        </div>
      );
    });
  };

  const fieldRef = useRef<HTMLDivElement>(null);

  const addAnotherMessage = (message: string) => {
    return addMessageToList(message);
  };

  // useEffect(() => {
  //   setTimeout(() => {
  //     addMessageToList("3 sek");
  //   }, 3000);
  // }, []);

  useEffect(() => {
    if (fieldRef.current) {
      fieldRef.current?.scrollIntoView({
        behavior: "smooth",
        block: "nearest",
      });
    }
  }, [message]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.window}>
        <div
          className={styles.box}
          onClick={() => addAnotherMessage("inny event")}
        >
          {mapArray()} <div ref={fieldRef}></div>
        </div>
      </div>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          value={message}
          onChange={handleChange}
          className={styles.input}
        />
        <input type="submit" value="Send" className={styles.button} />
      </form>
    </div>
  );
};

export default Home;
